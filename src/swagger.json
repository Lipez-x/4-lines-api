{
  "openapi": "3.0.0",
  "info": {
    "title": "4 Lines API",
    "description": "Esta API foi desenvolvida para otimizar e facilitar o processo de agendamento de arenas esportivas. Ela atende tanto aos proprietários das arenas quanto aos clientes interessados, proporcionando uma experiência mais eficiente e prática para ambas as partes.",
    "contact": {
      "email": "ifelipelima.dev@gmail.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/",
      "description": "API Test"
    }
  ],
  "paths": {
    "/user/create": {
      "post": {
        "summary": "Cadastro de usuário",
        "description": "Rota para o o usuário se cadastrar no sistema",
        "tags": ["User"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "username": { "type": "string" },
                  "email": { "type": "string" },
                  "password": { "type": "string" },
                  "confirmPassword": { "type": "string" }
                }
              },
              "examples": {
                "user": {
                  "value": {
                    "username": "Messi",
                    "email": "messi@intermiami.com",
                    "password": "goat123",
                    "confirmPassword": "goat123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "422": {
            "description": "Username, Email ou Senha não foram infromados"
          },
          "409": {
            "description": "O email já está em uso ou a senha não é a mesma"
          },
          "201": { "description": "Usuário criado com sucesso" },
          "500": { "description": "Erro interno do servidor" }
        }
      }
    },
    "/user/login": {
      "post": {
        "summary": "Login",
        "description": "Rota para gerar o token de autentificação JWT",
        "tags": ["User"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                }
              },
              "examples": {
                "user": {
                  "value": {
                    "email": "messi@intermiami.com",
                    "password": "goat123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "jwt_token": { "type": "string" }
                  }
                }
              }
            }
          },
          "409": { "description": "Email ou senha não foram informados." },
          "404": { "description": "Usuário não encontrado" },
          "401": { "description": "Senha inválida" },
          "500": { "description": "Erro interno do servidor" }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Procurar usuário por ID",
        "description": "Rota para buscar usuários utilizando o ID",
        "tags": ["User"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do usuário",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": { "description": "Usuário não encontrado" },
          "401": { "description": "Token inválido" },
          "500": { "description": "Erro interno do servidor" }
        }
      }
    },
    "/user/": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Buscar todos os usuários",
        "description": "Rota que retorna todos os usuários cadastrados no sistema",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": { "description": "Token inválido" },
          "500": { "description": "Erro interno do servidor" }
        }
      }
    },
    "/user/update/{id}": {
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Atualizar usuário",
        "description": "Rota para atualizar informações do usuário",
        "tags": ["User"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do usuário",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": { "type": "string" },
                  "email": { "type": "string" },
                  "password": { "type": "string" },
                  "confirmPassword": { "type": "string" }
                }
              },
              "examples": {
                "user": {
                  "value": {
                    "username": "Messi",
                    "email": "messi@barcelona.com",
                    "password": "melhordomundo",
                    "confirmPassword": "melhordomundo"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Usuário atualizado com sucesso" },
          "401": { "description": "Token inválido" },
          "404": { "description": "Usuário não encontrado" },
          "422": {
            "description": "Username, Email ou Senha não foram informados"
          },
          "403": {
            "description": "Você não pode atualizar outro usuário (Token precisa corresponder com ID do User)"
          },
          "409": {
            "description": "O email já está em uso ou a senha não é a mesma"
          },
          "500": { "description": "Erro interno do servidor" }
        }
      }
    },
    "/user/delete/{id}": {
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Deletar usuário",
        "description": "Rota para deletar usuário do banco de dados",
        "tags": ["User"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do usuário",
            "required": true
          }
        ],
        "responses": {
          "200": { "description": "Usuário deletado com sucesso" },
          "401": { "description": "Token inválido" },
          "404": { "description": "Usuário não encontrado" },
          "403": {
            "description": "Você não tem acesso a este usuário (Token precisa corresponder com ID do User)"
          },
          "500": { "description": "Erro interno do servidor" }
        }
      }
    },
    "/arena/create": {
      "post": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Adicionar arena",
        "description": "Rota para adicionar nova arena",
        "tags": ["Arena"],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": { "type": "string" },
                  "contact": { "type": "string" },
                  "address": { "type": "string" },
                  "price": { "type": "number" },
                  "description": { "type": "object" },
                  "schedule": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "hour": { "type": "string", "format": "date-time" },
                        "available": { "type": "boolean" }
                      }
                    }
                  }
                }
              },
              "examples": {
                "arena": {
                  "value": {
                    "name": "Camp Nou",
                    "contact": "(99) 999999999",
                    "address": "Av. de Joan XXIII, 1, 08001 Barcelona",
                    "price": 10000000,
                    "description": "Estádio de futebol localizado na cidade de Barcelona, na Catalunha, na Espanha. É a casa do clube FC Barcelona da La Liga desde 1957.",
                    "schedule": [
                      {
                        "hour": "2024-07-09T19:30:00Z",
                        "available": true
                      },
                      {
                        "hour": "2024-07-09T19:30:00Z",
                        "available": true
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Arena criada com sucesso" },
          "422": { "description": "Algum dado obrigatório não foi informado" },
          "409": { "description": "A hora precisa ser uma data" },
          "401": { "description": "Token inválido" }
        }
      }
    },
    "/arena/{id}": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Buscar arena por ID",
        "description": "Rota para buscar arenas utilizando o seu ID",
        "tags": ["Arena"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do usuário",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Arena"
                }
              }
            }
          },
          "401": { "description": "Token inválido" },
          "404": { "description": "Arena não encontrada" },
          "500": { "description": "Erro interno do servidor" }
        }
      }
    },
    "/arena/": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Buscar todas as arenas",
        "description": "Rota que retorna todas arenas registradas",
        "tags": ["Arena"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "$ref": "#/components/schemas/Arena"
                }
              }
            }
          },
          "401": { "description": "Token inválido" },
          "500": { "description": "Erro interno do servidor" }
        }
      }
    },
    "/arena/myarena": {
      "get": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Buscar arenas do usuário",
        "description": "Rota para retornar todas as arenas cadastradas pelo usuário via verificação do Token JWT",
        "tags": ["Arena"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Arena" }
                }
              }
            }
          },
          "401": { "description": "Token inválido" },
          "404": { "description": "Usuário não encontrado" },
          "500": { "description": "Erro interno do servidor" }
        }
      }
    },
    "/arena/update/{id}": {
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Atualizar arena",
        "description": "Rota para atualizar informações da arena",
        "tags": ["Arena"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do usuário",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "contact": { "type": "string" },
                  "address": { "type": "string" },
                  "price": { "type": "number" },
                  "description": { "type": "object" },
                  "schedule": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "hour": { "type": "string", "format": "date-time" },
                        "available": { "type": "boolean" }
                      }
                    }
                  }
                }
              },
              "examples": {
                "arena": {
                  "value": {
                    "name": "Spotify Camp Nou",
                    "contact": "(99) 999999999",
                    "address": "Av. de Joan XXIII, 1, 08001 Barcelona",
                    "price": 10000000,
                    "description": "Estádio de futebol localizado na cidade de Barcelona, na Catalunha, na Espanha. É a casa do clube FC Barcelona da La Liga desde 1957.",
                    "schedule": [
                      {
                        "hour": "2024-07-09T19:30:00Z",
                        "available": true
                      },
                      {
                        "hour": "2024-07-09T19:30:00Z",
                        "available": true
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Arena atualizada com sucesso" },
          "401": { "description": "Token inválido" },
          "422": { "description": "Algum dado obrigatório não foi informado" },
          "404": { "description": "Arena não encontrada" },
          "409": { "description": "A hora precisa estar no formato de data" },
          "403": {
            "description": "Você não pode atualizar uma arena de outro usuário (Id do dono da arena incompátivel com o id retornado pelo token)"
          },
          "500": { "description": "Erro interno do servidor" }
        }
      }
    },
    "/arena/{id}/{hourId}": {
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Solicitar aluguel",
        "description": "Rota para solicitar o aluguel de um horário em uma arena",
        "tags": ["Arena"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da arena",
            "required": true
          },
          {
            "name": "hourId",
            "in": "path",
            "description": "ID do horário",
            "required": true
          }
        ],
        "responses": {
          "200": { "description": "Solicitação enviada" },
          "401": { "description": "Token inválido" },
          "404": { "description": "Arena ou horário não encontrado" },
          "500": { "description": "Erro interno do servidor" }
        }
      }
    },
    "/arena/accept/{id}/{hourId}/{lesseeId}": {
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Aceitar solicitação",
        "description": "Rota para aceitar solicitação de aluguel de horário em uma arena do usuário",
        "tags": ["Arena"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da arena",
            "required": true
          },
          {
            "name": "hourId",
            "in": "path",
            "description": "ID do horário",
            "required": true
          },
          {
            "name": "lesseeId",
            "in": "path",
            "description": "Id do solicitador",
            "required": true
          }
        ],
        "responses": {
          "200": { "description": "Solicitação aceita com sucesso" },
          "401": { "description": "Token inválido" },
          "404": { "description": "Arena ou horário não encontrado" },
          "403": {
            "description": "Você não pode aceitar solicitações da arena de outro usuário (Id do dono da arena incompátivel com o id retornado pelo token)"
          },
          "500": { "description": "Erro interno do servidor" }
        }
      }
    },
    "/arena/complete/{id}/{hourId}": {
      "put": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Encerrar aluguel",
        "description": "Rota para concluir aluguel e deixar horário disponível novamente",
        "tags": ["Arena"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da arena",
            "required": true
          },
          {
            "name": "hourId",
            "in": "path",
            "description": "ID do horário",
            "required": true
          }
        ],
        "responses": {
          "200": { "description": "Aluguel encerrado com sucesso" },
          "401": { "description": "Token inválido" },
          "404": { "description": "Arena ou horário não encontrado" },
          "403": {
            "description": "Você não pode encerrar alugueis da arena de outro usuário (Id do dono da arena incompátivel com o id retornado pelo token)"
          },
          "500": { "description": "Erro interno do servidor" }
        }
      }
    },
    "/arena/delete/{id}": {
      "delete": {
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "summary": "Deletar arena",
        "description": "Rota para deletar uma arena",
        "tags": ["Arena"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da arena",
            "required": true
          }
        ],
        "responses": {
          "200": { "description": "Arena deletada com sucesso" },
          "401": { "description": "Token inválido" },
          "404": { "description": "Arena não encontrada" },
          "403": {
            "description": "Você não pode deletar a arena de outro usuário"
          },
          "500": { "description": "Erro interno do servidor" }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "username": { "type": "string" },
          "email": { "type": "string" },
          "password": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "Arena": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "contact": { "type": "string" },
          "address": { "type": "string" },
          "price": { "type": "number" },
          "description": { "type": "string" },
          "schedule": {
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "#/components/schemas/Schedule"
            }
          },
          "owner": { "type": "object", "$ref": "#/components/schemas/User" },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "Schedule": {
        "type": "object",
        "properties": {
          "hour": { "type": "string", "format": "date-time" },
          "available": { "type": "boolean" },
          "lessee": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/User" }
          },
          "id": { "type": "string" }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
